"use strict";(self.webpackChunkrabonjs_docs=self.webpackChunkrabonjs_docs||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"welcome","metadata":{"permalink":"/blog/welcome","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2022-12-08-welcome/index.mdx","source":"@site/blog/2022-12-08-welcome/index.mdx","title":"Welcome","description":"Today, we are excited to announce the first alpha release of RabonaJS, a lightweight JavaScript library for plotting soccer events","date":"2022-12-08T00:00:00.000Z","formattedDate":"December 8, 2022","tags":[{"label":"rabonajs","permalink":"/blog/tags/rabonajs"},{"label":"hello","permalink":"/blog/tags/hello"},{"label":"soccer","permalink":"/blog/tags/soccer"},{"label":"football","permalink":"/blog/tags/football"}],"readingTime":1.8,"hasTruncateMarker":false,"authors":[{"name":"Orhun \xd6zer","title":"Maintainer of RabonaJS","url":"https://github.com/orabazu","imageURL":"https://avatars.githubusercontent.com/u/812622?v=4","key":"orabazu"}],"frontMatter":{"slug":"welcome","title":"Welcome","authors":["orabazu"],"tags":["rabonajs","hello","soccer","football"]}},"content":"Today, we are excited to announce the first alpha release of RabonaJS, a lightweight JavaScript library for plotting soccer events\\n\\nRabonaJS provides a simple and intuitive syntax for plotting soccer/football events as layers on top of a soccer field. Powered by D3.js, it is designed to be easy to use and to integrate with js notebooks such as Observable.\\n\\n```js\\nimport Rabona from \\"rabonajs\\";\\n\\nconst pitchOptions = {\\n  scaler: 6, //constant to resize the pitch\\n  height: 80, //px\\n  width: 120, //px\\n  padding: 100, //px\\n  linecolour: \\"#ffffff\\",\\n  fillcolour: \\"#7ec850\\",\\n};\\n\\n// initialize the pitch on the \\"pitch\\" div with a given options\\nconst pitch = Rabona.pitch(\\"pitch\\", pitchOptions);\\n```\\n\\n```html\\n<div id=\\"pitch\\"></div>\\n```\\n\\nSimple as is.\\n\\nIn this first alpha release, we have implemented the core functionality of RabonaJS, including the `Pitch`, `Layer` methods.\\n\\nWe are excited to continue developing RabonaJS and adding new features and functionality in the future. We encourage you to try out the library and give us feedback on what you like and what you would like to see improved.\\n\\nTo get started with RabonaJS, you can visit the GitHub repository at https://github.com/orabazu/rabonajs. The documentation and examples will help you learn how to use the library in your own projects or notebooks.\\n\\nWe look forward to hearing your feedback and seeing what you build with RabonaJS!\\n\\nimport { useState, useEffect } from \\"react\\";\\nimport Rabona from \\"rabonajs\\";\\nexport const PitchComponentWithPasses = () => {\\n  const [pitch, setPitch] = useState(null);\\n  const pitchOptions = {\\n    scaler: 6, //constant to resize the pitch\\n    height: 80, //in px\\n    width: 120, //in px\\n    padding: 100, // in px, distance between the pitch border lines and external border\\n    linecolour: \\"#ffffff\\",\\n    fillcolour: \\"#7ec850\\",\\n  };\\n  useEffect(() => {\\n    if (!pitch) {\\n      const pitch = Rabona.pitch(\\"pitch2\\", pitchOptions);\\n      setPitch(pitch);\\n      const passes = [];\\n      for (let i = 0; i < 10; i++) {\\n        passes.push({\\n          startX: Math.floor(Math.random() * 120),\\n          startY: Math.floor(Math.random() * 80),\\n          endX: Math.floor(Math.random() * 120),\\n          endY: Math.floor(Math.random() * 80),\\n        });\\n      }\\n      const layer = Rabona.layer({\\n        type: \\"ballMovement\\",\\n        data: passes,\\n        options: {\\n          color: \\"yellow\\",\\n          width: 1.5,\\n          showArrows: true,\\n          radius: 3,\\n        },\\n      }).addTo(pitch);\\n    }\\n  }, []);\\n  return <div id=\\"pitch2\\" style={{ width: \\"500px\\", margin: \\"auto\\" }} />;\\n};\\n\\n<PitchComponentWithPasses />"}]}')}}]);